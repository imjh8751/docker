#!/bin/bash

# WAS JMS Producer/Consumer ÏûêÎèô ÏÉùÏÑ± Î∞è ÎπåÎìú Ïä§ÌÅ¨Î¶ΩÌä∏
# ÏÇ¨Ïö©Î≤ï: ./setup.sh

echo "=== WAS JMS Producer/Consumer ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ± ÏãúÏûë ==="

# ÌîÑÎ°úÏ†ùÌä∏ Î£®Ìä∏ ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±
PROJECT_ROOT="was-jms-demo"
rm -rf $PROJECT_ROOT
mkdir -p $PROJECT_ROOT
cd $PROJECT_ROOT

echo "‚úì ÌîÑÎ°úÏ†ùÌä∏ ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±: $PROJECT_ROOT"

# =================================================================
# 1. Producer ÌîÑÎ°úÏ†ùÌä∏ Íµ¨Ï°∞ ÏÉùÏÑ±
# =================================================================
echo "üì¶ Producer ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ± Ï§ë..."

mkdir -p producer/src/main/java/com/example/producer
mkdir -p producer/src/main/webapp/WEB-INF
mkdir -p producer/META-INF

# Producer pom.xml
cat > producer/pom.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.example</groupId>
    <artifactId>jms-producer</artifactId>
    <version>1.0.0</version>
    <packaging>ear</packaging>
    
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>producer</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <webXml>src\main\webapp\WEB-INF\web.xml</webXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <displayName>JMS Producer</displayName>
                    <modules>
                        <webModule>
                            <groupId>com.example</groupId>
                            <artifactId>jms-producer</artifactId>
                            <contextRoot>/producer</contextRoot>
                        </webModule>
                    </modules>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
EOF

# Producer Servlet
cat > producer/src/main/java/com/example/producer/MessageProducerServlet.java << 'EOF'
package com.example.producer;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.jms.*;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import java.io.IOException;
import java.io.PrintWriter;

@WebServlet("/send")
public class MessageProducerServlet extends HttpServlet {
    
    private static final String CF_JNDI = "jms/ConnectionFactory";
    private static final String QUEUE_JNDI = "jms/TestQueue";
    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        String message = request.getParameter("msg");
        if (message == null || message.trim().isEmpty()) {
            message = "Hello from Producer!";
        }
        
        response.setContentType("text/html; charset=UTF-8");
        PrintWriter out = response.getWriter();
        
        try {
            sendMessage(message);
            out.println("<html><body>");
            out.println("<h2>‚úÖ Î©îÏãúÏßÄ Ï†ÑÏÜ° ÏÑ±Í≥µ!</h2>");
            out.println("<p><strong>Ï†ÑÏÜ°Îêú Î©îÏãúÏßÄ:</strong> " + message + "</p>");
            out.println("<p><strong>ÏãúÍ∞Ñ:</strong> " + new java.util.Date() + "</p>");
            out.println("<hr>");
            out.println("<p>ÏÇ¨Ïö©Î≤ï: <code>/producer/send?msg=your_message</code></p>");
            out.println("</body></html>");
            
        } catch (Exception e) {
            out.println("<html><body>");
            out.println("<h2>‚ùå Î©îÏãúÏßÄ Ï†ÑÏÜ° Ïã§Ìå®</h2>");
            out.println("<p><strong>Ïò§Î•ò:</strong> " + e.getMessage() + "</p>");
            out.println("</body></html>");
            e.printStackTrace();
        }
    }
    
    private void sendMessage(String messageText) throws NamingException, JMSException {
        InitialContext ctx = null;
        Connection connection = null;
        
        try {
            // JNDI Lookup
            ctx = new InitialContext();
            ConnectionFactory cf = (ConnectionFactory) ctx.lookup(CF_JNDI);
            Queue queue = (Queue) ctx.lookup(QUEUE_JNDI);
            
            // JMS Connection ÏÉùÏÑ±
            connection = cf.createConnection();
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
            MessageProducer producer = session.createProducer(queue);
            
            // Î©îÏãúÏßÄ ÏÉùÏÑ± Î∞è Ï†ÑÏÜ°
            TextMessage message = session.createTextMessage(messageText);
            message.setStringProperty("sender", "ProducerServlet");
            message.setLongProperty("timestamp", System.currentTimeMillis());
            
            producer.send(message);
            
            System.out.println("üì§ Î©îÏãúÏßÄ Ï†ÑÏÜ°Îê®: " + messageText);
            
        } finally {
            if (connection != null) {
                connection.close();
            }
            if (ctx != null) {
                ctx.close();
            }
        }
    }
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        doGet(request, response);
    }
}
EOF

# Producer web.xml
cat > producer/src/main/webapp/WEB-INF/web.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    
    <display-name>JMS Producer Web Application</display-name>
    
    <resource-ref>
        <res-ref-name>jms/ConnectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    
    <resource-ref>
        <res-ref-name>jms/TestQueue</res-ref-name>
        <res-type>javax.jms.Queue</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    
</web-app>
EOF

# Producer application.xml
cat > producer/META-INF/application.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<application xmlns="http://java.sun.com/xml/ns/javaee"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
             http://java.sun.com/xml/ns/javaee/application_7.xsd"
             version="7">
    
    <display-name>JMS Producer Application</display-name>
    
    <module>
        <web>
            <web-uri>producer.war</web-uri>
            <context-root>/producer</context-root>
        </web>
    </module>
    
</application>
EOF

echo "‚úì Producer ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ± ÏôÑÎ£å"

# =================================================================
# 2. Consumer ÌîÑÎ°úÏ†ùÌä∏ Íµ¨Ï°∞ ÏÉùÏÑ±
# =================================================================
echo "üì¶ Consumer ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ± Ï§ë..."

mkdir -p consumer/src/main/java/com/example/consumer
mkdir -p consumer/META-INF

# Consumer pom.xml
cat > consumer/pom.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.example</groupId>
    <artifactId>jms-consumer</artifactId>
    <version>1.0.0</version>
    <packaging>ear</packaging>
    
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>javax.ejb-api</artifactId>
            <version>3.2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>consumer</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <ejbVersion>3.2</ejbVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <displayName>JMS Consumer</displayName>
                    <modules>
                        <ejbModule>
                            <groupId>com.example</groupId>
                            <artifactId>jms-consumer</artifactId>
                        </ejbModule>
                    </modules>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
EOF

# Consumer MDB
cat > consumer/src/main/java/com/example/consumer/MessageConsumerMDB.java << 'EOF'
package com.example.consumer;

import javax.ejb.ActivationConfigProperty;
import javax.ejb.MessageDriven;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
import java.util.Date;

@MessageDriven(
    activationConfig = {
        @ActivationConfigProperty(
            propertyName = "destinationType", 
            propertyValue = "javax.jms.Queue"
        ),
        @ActivationConfigProperty(
            propertyName = "destination", 
            propertyValue = "jms/TestQueue"
        ),
        @ActivationConfigProperty(
            propertyName = "connectionFactoryJndiName", 
            propertyValue = "jms/ConnectionFactory"
        )
    }
)
public class MessageConsumerMDB implements MessageListener {
    
    @Override
    public void onMessage(Message message) {
        try {
            if (message instanceof TextMessage) {
                TextMessage textMessage = (TextMessage) message;
                String messageText = textMessage.getText();
                
                // Î©îÏãúÏßÄ ÏÜçÏÑ± ÏùΩÍ∏∞
                String sender = textMessage.getStringProperty("sender");
                long timestamp = textMessage.getLongProperty("timestamp");
                
                // ÏΩòÏÜî Ï∂úÎ†•
                System.out.println("=================================================");
                System.out.println("üì• [JMS Consumer] Î©îÏãúÏßÄ ÏàòÏã†Îê®!");
                System.out.println("üìÑ ÎÇ¥Ïö©: " + messageText);
                System.out.println("üë§ Î∞úÏã†Ïûê: " + (sender != null ? sender : "Unknown"));
                System.out.println("‚è∞ Ï†ÑÏÜ°ÏãúÍ∞Ñ: " + new Date(timestamp));
                System.out.println("üïê ÏàòÏã†ÏãúÍ∞Ñ: " + new Date());
                System.out.println("üÜî Î©îÏãúÏßÄID: " + message.getJMSMessageID());
                System.out.println("=================================================");
                
            } else {
                System.out.println("‚ö†Ô∏è  [JMS Consumer] ÏßÄÏõêÌïòÏßÄ ÏïäÎäî Î©îÏãúÏßÄ ÌÉÄÏûÖ: " 
                                 + message.getClass().getName());
            }
            
        } catch (JMSException e) {
            System.err.println("‚ùå [JMS Consumer] Î©îÏãúÏßÄ Ï≤òÎ¶¨ Ï§ë Ïò§Î•ò Î∞úÏÉù: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            System.err.println("‚ùå [JMS Consumer] ÏòàÏÉÅÏπò Î™ªÌïú Ïò§Î•ò: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
EOF

# Consumer ejb-jar.xml
mkdir -p consumer/src/main/resources/META-INF
cat > consumer/src/main/resources/META-INF/ejb-jar.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<ejb-jar xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/ejb-jar_3_2.xsd"
         version="3.2">
    
    <display-name>JMS Consumer EJB</display-name>
    
    <enterprise-beans>
        <message-driven>
            <ejb-name>MessageConsumerMDB</ejb-name>
            <ejb-class>com.example.consumer.MessageConsumerMDB</ejb-class>
            <messaging-type>javax.jms.MessageListener</messaging-type>
            
            <resource-ref>
                <res-ref-name>jms/ConnectionFactory</res-ref-name>
                <res-type>javax.jms.ConnectionFactory</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
            
            <resource-ref>
                <res-ref-name>jms/TestQueue</res-ref-name>
                <res-type>javax.jms.Queue</res-type>
                <res-auth>Container</res-auth>
                <res-sharing-scope>Shareable</res-sharing-scope>
            </resource-ref>
        </message-driven>
    </enterprise-beans>
    
</ejb-jar>
EOF

# Consumer application.xml
cat > consumer/META-INF/application.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<application xmlns="http://java.sun.com/xml/ns/javaee"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
             http://java.sun.com/xml/ns/javaee/application_7.xsd"
             version="7">
    
    <display-name>JMS Consumer Application</display-name>
    
    <module>
        <ejb>consumer.jar</ejb>
    </module>
    
</application>
EOF

echo "‚úì Consumer ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ± ÏôÑÎ£å"

# =================================================================
# 3. WAS ÏÑ§Ï†ï ÌååÏùº ÏÉùÏÑ± (Ï∞∏Í≥†Ïö©)
# =================================================================
echo "üìã WAS ÏÑ§Ï†ï Ï∞∏Í≥† ÌååÏùº ÏÉùÏÑ± Ï§ë..."

cat > was-setup-guide.txt << 'EOF'
=== WebSphere Application Server JMS ÏÑ§Ï†ï Í∞ÄÏù¥Îìú ===

1. JMS Î¶¨ÏÜåÏä§ ÏÉùÏÑ± (WAS Í¥ÄÎ¶¨ÏΩòÏÜî):

   A) JMS Provider ÏÉùÏÑ±:
      - Resources > JMS > JMS providers > New
      - Name: DefaultJMSProvider
      - Type: WebSphere embedded messaging

   B) ConnectionFactory ÏÉùÏÑ±:
      - JMS providers > DefaultJMSProvider > Connection factories > New
      - Name: DefaultConnectionFactory  
      - JNDI name: jms/ConnectionFactory
      - Connection pool settings: Default

   C) Queue ÏÉùÏÑ±:
      - JMS providers > DefaultJMSProvider > Queues > New
      - Name: TestQueue
      - JNDI name: jms/TestQueue

2. Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Î∞∞Ìè¨:
   - Applications > Install new application
   - producer.ear ÏóÖÎ°úÎìú Î∞è ÏÑ§Ïπò
   - consumer.ear ÏóÖÎ°úÎìú Î∞è ÏÑ§Ïπò

3. Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÏãúÏûë:
   - Enterprise ApplicationsÏóêÏÑú Îëê Ïï± Î™®Îëê ÏãúÏûë

4. ÌÖåÏä§Ìä∏:
   - Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú Ï†ëÏÜç: http://server:port/producer/send?msg=ÌÖåÏä§Ìä∏Î©îÏãúÏßÄ
   - Consumer Î°úÍ∑∏ÏóêÏÑú Î©îÏãúÏßÄ ÌôïÏù∏

Ï£ºÏùòÏÇ¨Ìï≠:
- WAS Î≤ÑÏ†ÑÏóê Îî∞Îùº ÏÑ§Ï†ï Í≤ΩÎ°úÍ∞Ä Îã§Î•º Ïàò ÏûàÏäµÎãàÎã§
- Messaging EngineÏù¥ ÌôúÏÑ±ÌôîÎêòÏñ¥ ÏûàÏñ¥Ïïº Ìï©ÎãàÎã§
- Î∞©ÌôîÎ≤Ω ÏÑ§Ï†ïÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî
EOF

# =================================================================
# 4. Maven ÎπåÎìú Ïã§Ìñâ
# =================================================================
echo "üî® Maven ÎπåÎìú ÏãúÏûë..."

# MavenÏù¥ ÏÑ§ÏπòÎêòÏñ¥ ÏûàÎäîÏßÄ ÌôïÏù∏
if ! command -v mvn &> /dev/null; then
    echo "‚ùå MavenÏù¥ ÏÑ§ÏπòÎêòÏñ¥ ÏûàÏßÄ ÏïäÏäµÎãàÎã§. Îã§Ïùå Ï§ë ÌïòÎÇòÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî:"
    echo "   1. Maven ÏÑ§Ïπò: https://maven.apache.org/install.html"
    echo "   2. ÎòêÎäî IDEÏóêÏÑú pom.xml ÌååÏùºÏùÑ ÏßÅÏ†ë ÎπåÎìú"
    echo "   3. ÎòêÎäî Ant ÎπåÎìú Ïä§ÌÅ¨Î¶ΩÌä∏ ÏÇ¨Ïö© (ÏïÑÎûò ant-build.xml Ï∞∏Ï°∞)"
else
    echo "‚úì Maven Î∞úÍ≤¨Îê®. ÎπåÎìú ÏßÑÌñâ..."
    
    # Producer ÎπåÎìú
    echo "üî® Producer ÎπåÎìú Ï§ë..."
    cd producer
    mvn clean package
    if [ $? -eq 0 ]; then
        echo "‚úÖ Producer ÎπåÎìú ÏÑ±Í≥µ: producer/target/producer.ear"
        cp target/producer.ear ../producer.ear
    else
        echo "‚ùå Producer ÎπåÎìú Ïã§Ìå®"
    fi
    cd ..
    
    # Consumer ÎπåÎìú
    echo "üî® Consumer ÎπåÎìú Ï§ë..."
    cd consumer
    mvn clean package
    if [ $? -eq 0 ]; then
        echo "‚úÖ Consumer ÎπåÎìú ÏÑ±Í≥µ: consumer/target/consumer.ear"
        cp target/consumer.ear ../consumer.ear
    else
        echo "‚ùå Consumer ÎπåÎìú Ïã§Ìå®"
    fi
    cd ..
fi

# =================================================================
# 5. ÎπåÎìú Í≤∞Í≥º Î∞è ÏÇ¨Ïö©Î≤ï ÏïàÎÇ¥
# =================================================================
echo ""
echo "üéâ === ÎπåÎìú ÏôÑÎ£å! ==="
echo ""

if [ -f "producer.ear" ] && [ -f "consumer.ear" ]; then
    echo "‚úÖ ÏÉùÏÑ±Îêú EAR ÌååÏùº:"
    echo "   üì¶ $(pwd)/producer.ear ($(du -h producer.ear | cut -f1))"
    echo "   üì¶ $(pwd)/consumer.ear ($(du -h consumer.ear | cut -f1))"
else
    echo "‚ö†Ô∏è  EAR ÌååÏùºÏù¥ ÏÉùÏÑ±ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. Maven ÎπåÎìúÎ•º ÏàòÎèôÏúºÎ°ú Ïã§ÌñâÌïòÏÑ∏Ïöî:"
    echo "   cd producer && mvn clean package"
    echo "   cd consumer && mvn clean package"
fi

echo ""
echo "üìÇ ÏÉùÏÑ±Îêú ÌîÑÎ°úÏ†ùÌä∏ Íµ¨Ï°∞:"
tree . 2>/dev/null || find . -type f | head -20

echo ""
echo "üöÄ ÏÇ¨Ïö©Î≤ï:"
echo "1. WAS Í¥ÄÎ¶¨ÏΩòÏÜîÏóêÏÑú JMS Î¶¨ÏÜåÏä§ ÏÑ§Ï†ï (was-setup-guide.txt Ï∞∏Ï°∞)"
echo "2. producer.ear, consumer.earÏùÑ WASÏóê Î∞∞Ìè¨"
echo "3. ÌÖåÏä§Ìä∏: http://your-server:port/producer/send?msg=hello"
echo "4. consumer Î°úÍ∑∏ÏóêÏÑú Î©îÏãúÏßÄ ÌôïÏù∏"
echo ""
echo "üí° Ï∞∏Í≥†: was-setup-guide.txt ÌååÏùºÏóê ÏÉÅÏÑ∏Ìïú WAS ÏÑ§Ï†ï Î∞©Î≤ïÏù¥ ÏûàÏäµÎãàÎã§."

# Ïã§Ìñâ Í∂åÌïú Î∂ÄÏó¨ ÏïàÎÇ¥
echo ""
echo "üìã Ïù¥ Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ Î∞©Î≤ï:"
echo "   chmod +x setup.sh"
echo "   ./setup.sh"
EOF
