services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    ports:
      - 2182:2182
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    ports:
      - 2183:2183
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zoozookeeper-2:2888:3888;zookeeper-3:2888:3888
  kafka-1:
    image: confluentinc/cp-kafka:latest
    restart: always
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafka-2:
    image: confluentinc/cp-kafka:latest
    restart: always
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_BROKER_ID: 2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafka-3:
    image: confluentinc/cp-kafka:latest
    restart: always
    ports:
      - 9094:9094
      - 29094:29094
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_BROKER_ID: 3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKER_CONNECT: kafka-1:19092
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
  kafka-ui:
    container_name: kafka-ui
    restart: always
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      KAFKA_CLUSTERS_0_NAME: itapi_kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      SERVER_SERVLET_CONTEXT_PATH: /
      # LDAP Login configure
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: pass
      DYNAMIC_CONFIG_ENABLED: true
      # LDAP Login configure
      #AUTH_TYPE:"LDAP"
      #SPRING_LDAP_URLS: "ldap://192.168.0.123:389"
      #SPRING_LDAP_BASE: "cn={0},ou=Users,dc=itapi,dc=io"
      #SPRING_LDAP_ADMIN_USER: "cn=admin,dc=itapi,dc=io"
      #SPRING_LDAP_ADMIN_PASSWORD: "Jhyuklim1!"
      #SPRING_LDAP_USER_FILTER_SEARCH_BASE: "dc=itapi,dc=io"
      #SPRING_LDAP_USER_FILTER_SEARCH_FILTER: "(&(uid={0})(objectClass=inetOrgPerson))"
      #SPRING_LDAP_GROUP_FILTER_SEARCH_BASE: "ou=Users,dc=itapi,dc=io"
      #KAFKA_CLUSTERS_0_MASKING_0_TYPE: REMOVE
      #KAFKA_CLUSTERS_0_MASKING_0_FIELDS_0: "id"
      #KAFKA_CLUSTERS_0_MASKING_0_TOPICKEYSPATTERN: "events-with-ids-.*"
      #KAFKA_CLUSTERS_0_MASKING_0_TOPICVALUESPATTERN: "events-with-ids-.*"
      # kafka data masking configure
      #KAFKA_CLUSTERS_0_MASKING_1_TYPE: REPLACE
      #KAFKA_CLUSTERS_0_MASKING_1_FIELDS_0: "companyName"
      #KAFKA_CLUSTERS_0_MASKING_1_FIELDS_1: "organizationName"
      #KAFKA_CLUSTERS_0_MASKING_1_REPLACEMENT: "***MASKED_ORG_NAME***"
      #KAFKA_CLUSTERS_0_MASKING_1_TOPICVALUESPATTERN: "org-events-.*"
      #
      #KAFKA_CLUSTERS_0_MASKING_2_TYPE: MASK
      #KAFKA_CLUSTERS_0_MASKING_2_FIELDS_0: "name"
      #KAFKA_CLUSTERS_0_MASKING_2_FIELDS_1: "surname"
      #KAFKA_CLUSTERS_0_MASKING_2_MASKING_CHARS_REPLACEMENT_0: 'A'
      #KAFKA_CLUSTERS_0_MASKING_2_MASKING_CHARS_REPLACEMENT_1: 'a'
      #KAFKA_CLUSTERS_0_MASKING_2_MASKING_CHARS_REPLACEMENT_2: 'N'
      #KAFKA_CLUSTERS_0_MASKING_2_MASKING_CHARS_REPLACEMENT_3: '_'
      #KAFKA_CLUSTERS_0_MASKING_2_TOPICVALUESPATTERN: "user-states"
      #
      #KAFKA_CLUSTERS_0_MASKING_3_TYPE: MASK
      #KAFKA_CLUSTERS_0_MASKING_3_TOPICVALUESPATTERN: "very-secured-topic"
