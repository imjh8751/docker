import static net.grinder.script.Grinder.grinder
import static org.junit.Assert.*
import static org.hamcrest.Matchers.*
import net.grinder.script.GTest
import net.grinder.script.Grinder
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
// import static net.grinder.util.GrinderUtils.* // You can use this if you're using nGrinder after 3.2.3
import org.junit.Before
import org.junit.BeforeClass
import org.junit.Test
import org.junit.runner.RunWith

import org.ngrinder.http.HTTPRequest
import org.ngrinder.http.HTTPRequestControl
import org.ngrinder.http.HTTPResponse
import org.ngrinder.http.cookie.Cookie
import org.ngrinder.http.cookie.CookieManager
import groovy.json.JsonSlurper

/**
* A simple example using the HTTP plugin that shows the retrieval of a single page via HTTP.
*
* This script is automatically generated by ngrinder.
*
* @author admin
*/
@RunWith(GrinderRunner)
class TestRunner {

   public static GTest test
   public static HTTPRequest request
   public static Map<String, String> headers = [:]
   public static Map<String, Object> params = [:]
   public static List<Cookie> cookies = []

   @BeforeProcess
   public static void beforeProcess() {
			 HTTPRequestControl.setConnectionTimeout(300000)
			 test = new GTest(1, "192.168.0.37:9011")
			 request = new HTTPRequest()
			 grinder.logger.info("before process.")
   }

   @BeforeThread
   public void beforeThread() {
			 test.record(this, "test")
			 grinder.statistics.delayReports = true
			 grinder.logger.info("before thread.")
   }

   @Before
   public void before() {
		 // 사용 예시
		 setHeaders(
			 [
				 "accept": "application/json, text/javascript, */*; q=0.01",
				 "accept-language": "ko,en;q=0.9,en-US;q=0.8",
				 "Referrer-Policy": "strict-origin-when-cross-origin"
			 ]
		 )
		 println "Headers: ${headers}"


		 def jsonString = '''
		 {"planList":"","useOzViewerYn":"N"}
		 '''
		
		 def jsonSlurper = new JsonSlurper()
		 params = jsonSlurper.parseText(jsonString)
		 println "Params: ${params}"

		 request.setHeaders(headers)
		 CookieManager.addCookies(cookies)
		 grinder.logger.info("before. init headers and cookies")
   }


   @Test
   public void test() {
		 //발행
		 HTTPResponse response = request.POST("http://192.168.0.37:9011", params)

		 if (response.statusCode == 301 || response.statusCode == 302) {
					grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", response.statusCode)
		 } else if (response.statusCode == 400 || response.statusCode == 401 || response.statusCode == 404 || response.statusCode == 500) {
					grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", response.statusCode)
		 } else {
					assertThat(response.statusCode, is(200))
		 }
   }

    /**
     * HTTP 헤더를 설정하는 함수.
     *
     * @param newHeaders 설정할 HTTP 헤더 (Map<String, String>)
     */
    static void setHeaders(Map<String, String> newHeaders) {
        headers.clear()
        headers.putAll(newHeaders)
    }
}
